#ifndef __OBT_HK_H__
#define __OBT_HK_H__

#include <inttypes.h>

typedef struct hk_obt_uv_t
{
	// HK_STM32
	uint16_t rsvd0;
	uint8_t config;
	uint8_t flag_direct_ins;
	uint8_t payload_mode;
	uint8_t tx_mode;
	int16_t gain_tx;
	// 8
	int16_t i_3v3;
	int16_t u_3v3;
	int16_t i_vbat_tx;
	int16_t u_vbat_tx;
	// 16
	int16_t i_vbat_rx;
	int16_t u_vbat_rx;
	int16_t t_stm32;
	int16_t t_pa;
	// 24
	uint16_t n_tx_rf;
	uint16_t n_rx_rf;
	uint8_t rsvd1;
	uint8_t cmd_rf_last_rx;
	uint16_t n_rx_err_rf;
	// 32
	uint16_t n_tx_can;
	uint16_t n_rx_can;
	uint16_t n_tx_err_can;
	uint16_t n_rx_err_can;
	// 40
	uint32_t n_tc;
	int16_t dc_fm_tc;
	int16_t dc_fm_ham;
	// 48
	uint32_t rssi_fm_tc;
	uint32_t rssi_fm_ham;
	// 56
	uint8_t reset_flag;
	uint8_t sys_flag;
	uint16_t dma_overflow;
	uint32_t runtime;
	// 64
	uint32_t reset_count;
	uint32_t ctcss_count;
	// 72
	uint8_t rsvd5;
	uint8_t rsvd6;
	uint8_t antdet1;
	uint8_t antdet2;
	// HK_AVR
	uint16_t avr_rsvd2;
	uint8_t avr_adf7021_ld;
	uint8_t avr_err_flag;
	uint16_t avr_n_tx_i2c;
	uint16_t avr_n_rx_i2c;
	// 8
	uint16_t avr_n_tx_232;
	uint16_t avr_n_rx_232;
	uint32_t avr_runtime;
	// 16
	uint8_t avr_rssi_analog;
	uint8_t avr_n_rssi_const;
	uint8_t avr_unlock_count;
	uint8_t avr_reset_flag;
	// 20
	uint32_t avr_reset_count;
} hk_obt_uv_t;

typedef struct hk_tanrus_uv_t
{
	// HK_STM32
	uint16_t rsvd0;
	uint8_t config;
	uint8_t flag_direct_ins;
	uint8_t payload_mode;
	uint8_t tx_mode;
	int16_t gain_tx;
	// 8
	int16_t i_3v3;
	int16_t u_3v3;
	int16_t i_vbat_tx;
	int16_t u_vbat_tx;
	// 16
	int16_t i_vbat_rx;
	int16_t u_vbat_rx;
	int16_t t_stm32;
	int16_t t_pa;
	// 24
	uint16_t n_tx_rf;
	uint16_t n_rx_rf;
	uint8_t rsvd1;
	uint8_t cmd_rf_last_rx;
	uint16_t n_rx_err_rf;
	// 32
	uint16_t n_tx_can;
	uint16_t n_rx_can;
	uint16_t n_tx_err_can;
	uint16_t n_rx_err_can;
	// 40
	uint32_t n_tc;
	int16_t dc_fm_tc;
	int16_t dc_fm_ham;
	// 48
	uint32_t rssi_fm_tc;
	uint32_t rssi_fm_ham;
	// 56
	uint8_t reset_flag;
	uint8_t sys_flag;
	uint16_t dma_overflow;
	uint32_t runtime;
	// 64
	uint32_t reset_count;
	uint32_t ctcss_count;
	// 72
	float ctcss_det;
	// HK_AVR
	uint16_t avr_rsvd2;
	uint8_t avr_adf7021_ld;
	uint8_t avr_err_flag;
	uint16_t avr_n_tx_i2c;
	uint16_t avr_n_rx_i2c;
	// 8
	uint16_t avr_n_tx_232;
	uint16_t avr_n_rx_232;
	uint32_t avr_runtime;
	// 16
	uint8_t avr_rssi_analog;
	uint8_t avr_n_rssi_const;
	uint8_t avr_unlock_count;
	uint8_t avr_reset_flag;
	// 20
	uint32_t avr_reset_count;
} hk_tanrus_uv_t;

typedef struct Cfg_obt
{
	// 0
	uint8_t		id[2];
	int16_t		gain_tx_HI;
	int16_t		gain_tx_LO;
	int16_t		bias_I;
	// 8
	int16_t		bias_Q;
	int16_t		threshold_u_vbat_rx_powerdown;
	int16_t		threshold_u_vbat_rx_repeateroff;
	int8_t		threshold_t_pa;
	uint8_t 	contious_en;
	// 16
	uint8_t		cam_ham_en;
	uint8_t 	ctcss_en;
	uint8_t 	ctcss_n_integration;
	uint8_t		ctcss_n_tail;
	float		ctcss_coeff;
	// 24
	float		ctcss_threshold;
	float		gain_fmdm_ham;
	// 32
	float		gain_fmdm_tc;
	uint32_t	interval_hk_OBC;
	// 40
	uint32_t	interval_hk_TLM;
	uint32_t	interval_hk_BEACON;	
	// 48
	char		message[28];
	uint32_t	cam_delay;
	// 80
	uint32_t	crc;
	// 84
} Cfg_obt;

#endif
